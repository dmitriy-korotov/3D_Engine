cmake_minimum_required(VERSION 3.26)



set(ENGINE_RENDER_LIB render CACHE INTERNAL "")

project(${ENGINE_RENDER_LIB})



set(ENGINE_RENDER_LIB_HEADERS

		include/engine/render/fwd.hpp
		include/engine/render/fwd/application_renderer.hpp
		include/engine/render/fwd/frustum.hpp
		include/engine/render/fwd/basic_texture2D.hpp
		include/engine/render/fwd/texture_parametrs.hpp
		include/engine/render/fwd/basic_shader_program.hpp
		include/engine/render/fwd/basic_shader_programs_creator.hpp
		include/engine/render/fwd/basic_renderer.hpp
		include/engine/render/fwd/material.hpp
		include/engine/render/fwd/basic_mesh.hpp
		include/engine/render/fwd/model.hpp
		include/engine/render/fwd/shaders_manager.hpp
		include/engine/render/fwd/models_manager.hpp

		include/engine/render/application_renderer.hpp
		include/engine/render/render.hpp
		include/engine/render/frustum.hpp
		include/engine/render/basic_texture2D.hpp
		include/engine/render/texture_parametrs.hpp
		include/engine/render/basic_shader_program.hpp
		include/engine/render/basic_shader_programs_creator.hpp
		include/engine/render/basic_renderer.hpp
		include/engine/render/material.hpp
		include/engine/render/basic_mesh.hpp
		include/engine/render/model.hpp
		include/engine/render/shaders_manager.hpp
		include/engine/render/models_manager.hpp



		include/engine/render/shaders/shader_constructor.hpp
		include/engine/render/shaders/basic_shader.hpp
		include/engine/render/shaders/default_shader.hpp
		


		include/engine/render/util/fwd.hpp
		include/engine/render/util/fwd/basic_models_loader.hpp
		include/engine/render/util/fwd/models_loader.hpp
		include/engine/render/util/fwd/shader_preprocessor.hpp

		include/engine/render/util/basic_models_loader.hpp
		include/engine/render/util/models_loader.hpp
		include/engine/render/util/shader_preprocessor.hpp



		include/engine/render/open_gl/fwd.hpp
		include/engine/render/open_gl/fwd/basic_open_gl_buffer.hpp
		include/engine/render/open_gl/fwd/index_buffer.hpp
		include/engine/render/open_gl/fwd/vertex_buffer.hpp
		include/engine/render/open_gl/fwd/vertex_array.hpp
		include/engine/render/open_gl/fwd/buffer_layout.hpp
		include/engine/render/open_gl/fwd/texture2D.hpp
		include/engine/render/open_gl/fwd/shader_program.hpp
		include/engine/render/open_gl/fwd/shader_programs_creator.hpp
		include/engine/render/open_gl/fwd/renderer.hpp
		include/engine/render/open_gl/fwd/mesh.hpp

		include/engine/render/open_gl/open_gl.hpp
		include/engine/render/open_gl/basic_open_gl_buffer.hpp
		include/engine/render/open_gl/index_buffer.hpp
		include/engine/render/open_gl/vertex_buffer.hpp
		include/engine/render/open_gl/vertex_array.hpp
		include/engine/render/open_gl/buffer_layout.hpp
		include/engine/render/open_gl/texture2D.hpp
		include/engine/render/open_gl/shader_program.hpp
		include/engine/render/open_gl/shader_programs_creator.hpp
		include/engine/render/open_gl/renderer.hpp
		include/engine/render/open_gl/mesh.hpp
	
)

set(ENGINE_RENDER_LIB_SOURCES

		src/engine/render/application_renderer.cpp
		src/engine/render/basic_texture2D.cpp
		src/engine/render/basic_shader_program.cpp
		src/engine/render/basic_renderer.cpp
		src/engine/render/material.cpp
		src/engine/render/basic_mesh.cpp
		src/engine/render/model.cpp
		src/engine/render/shaders_manager.cpp
		src/engine/render/models_manager.cpp



		src/engine/render/util/basic_models_loader.cpp
		src/engine/render/util/models_loader.cpp
		src/engine/render/util/shader_preprocessor.cpp



		src/engine/render/shaders/basic_shader.cpp
		src/engine/render/shaders/default_shader.cpp



		src/engine/render/open_gl/basic_open_gl_buffer.cpp
		src/engine/render/open_gl/vertex_buffer.cpp
		src/engine/render/open_gl/index_buffer.cpp
		src/engine/render/open_gl/buffer_layout.cpp
		src/engine/render/open_gl/vertex_array.cpp
		src/engine/render/open_gl/texture2D.cpp
		src/engine/render/open_gl/shader_program.cpp
		src/engine/render/open_gl/shader_programs_creator.cpp
		src/engine/render/open_gl/renderer.cpp
		src/engine/render/open_gl/mesh.cpp
	
)

set(ENGINE_RENDER_LIB_ALL_FILES ${ENGINE_RENDER_LIB_HEADERS} ${ENGINE_RENDER_LIB_SOURCES})



source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${ENGINE_RENDER_LIB_ALL_FILES})



add_library(${ENGINE_RENDER_LIB} STATIC ${ENGINE_RENDER_LIB_ALL_FILES})
add_library(${ENGINE_ALIAS}::${ENGINE_RENDER_LIB} ALIAS ${ENGINE_RENDER_LIB})

target_include_directories(${ENGINE_RENDER_LIB} PUBLIC include)

target_link_libraries(${ENGINE_RENDER_LIB} PUBLIC
		${ENGINE_ALIAS}::${ENGINE_UTILITY_LIB}
		${ENGINE_ALIAS}::${ENGINE_WINDOW_LIB}
		assimp::assimp
		glfw
		glad
		glm
)

target_compile_features(${ENGINE_RENDER_LIB} PUBLIC cxx_std_20)



set_target_properties(${ENGINE_RENDER_LIB} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${ENGINE_BINARY_DIR})