cmake_minimum_required(VERSION 3.26)

set(ENGINE_PROJECT_NAME 3D_Engine_Core)



set(ENGINE_PUBLIC_HEADERS
		include/engine/error.hpp
		include/engine/application.hpp
		include/engine/logging/log.hpp
)

set(ENGINE_PRIVATE_HEADERS
		include/engine/window/events_data.hpp

		include/engine/window/basic_window.hpp
		include/engine/window/glfw_window.hpp
		include/engine/window/window_gui.hpp

		include/engine/window/windows_collector.hpp
		include/engine/window/windows_manager.hpp

		include/engine/render/open_gl/shader_program.hpp
)

set(ENGINE_PRIVATE_SOURCES 
		src/engine/application.cpp

		src/engine/window/basic_window.cpp
		src/engine/window/glfw_window.cpp
		src/engine/window/window_gui.cpp

		src/engine/window/windows_collector.cpp
		src/engine/window/windows_manager.cpp

		src/engine/render/open_gl/shader_program.cpp
)

set(ENGINE_ALL_SOURCES
		${ENGINE_PUBLIC_HEADERS}
		${ENGINE_PRIVATE_HEADERS}
		${ENGINE_PRIVATE_SOURCES}
)



source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${ENGINE_ALL_SOURCES})



add_library(${ENGINE_PROJECT_NAME} STATIC
		${ENGINE_ALL_SOURCES}
)
target_include_directories(${ENGINE_PROJECT_NAME} PUBLIC include/)



target_compile_features(${ENGINE_PROJECT_NAME} PUBLIC cxx_std_17)

add_subdirectory(../external/glfw ${CMAKE_CURRENT_BINARY_DIR}/glfw)
target_link_libraries(${ENGINE_PROJECT_NAME} PRIVATE glfw)

add_subdirectory(../external/spdlog ${CMAKE_CURRENT_BINARY_DIR}/spdlog)
target_link_libraries(${ENGINE_PROJECT_NAME} PRIVATE spdlog)

add_subdirectory(../external/glad ${CMAKE_CURRENT_BINARY_DIR}/glad)
target_link_libraries(${ENGINE_PROJECT_NAME} PRIVATE glad)

add_subdirectory(../external/imgui ${CMAKE_CURRENT_BINARY_DIR}/imgui)
target_link_libraries(${ENGINE_PROJECT_NAME} PRIVATE imgui)